group 'craigstockton'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.apache.logging.log4j:log4j-api:2.3'
    compile 'org.apache.logging.log4j:log4j-core:2.3'
    compile group: 'org.testng', name: 'testng', version: '6.8.21'
    compile 'org.seleniumhq.selenium:selenium-java:2.47.1'
    compile files('./src/main/resources/validator4test-1.0.jar')
    compile files('./src/main/resources/uinavigator-1.0.jar')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

test {
}

task debug(type: Test) {
    systemProperties['env'] = System.properties["env"]

    def groupsToInclude = []
    def groupsToExclude = []

    groupsToInclude.add('under_development')
    useTestNG() {
        groupsToInclude.each { String group -> includeGroups group }
        groupsToExclude.each { String group -> excludeGroups group }
    }
}

task evt(type: Test) {
    systemProperties['env'] = System.properties["env"]

    def groupsToInclude = []
    def groupsToExclude = []

    groupsToInclude.add('evt')
    useTestNG() {
        groupsToInclude.each { String group -> includeGroups group }
        groupsToExclude.each { String group -> excludeGroups group }
    }
}

task sprint(type: Test) {
    systemProperties['env'] = System.properties["env"]

    def groupsToInclude = []
    def groupsToExclude = []

    groupsToInclude.add('sprint')
    useTestNG() {
        groupsToInclude.each { String group -> includeGroups group }
        groupsToExclude.each { String group -> excludeGroups group }
    }
}

task regression(type: Test) {
    systemProperties['env'] = System.properties["env"]
    useTestNG()
}

task release(type: Test) {
    systemProperties['env'] = System.properties["env"]

    def groupsToInclude = []
    def groupsToExclude = []

    groupsToInclude.add('release')
    useTestNG() {
        groupsToInclude.each { String group -> includeGroups group }
        groupsToExclude.each { String group -> excludeGroups group }
    }
}

task production(type: Test) {
    systemProperties['env'] = System.properties["env"]

    def groupsToInclude = []
    def groupsToExclude = []

    groupsToInclude.add('production')
    useTestNG() {
        groupsToInclude.each { String group -> includeGroups group }
        groupsToExclude.each { String group -> excludeGroups group }
    }
}
